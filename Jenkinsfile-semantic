pipeline {
    agent any

    environment {
        SKIP_CI = false
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main',
                    credentialsId: 'github-ssh-key',
                    url: 'https://github.com/csye7125-su24-team14/helm-cve-intelligence-rag.git'
                }
            }
        }
        stage('Check Commit Message') {
            when {
                branch 'main'
            }
            steps {
                script {
                    def commitMessage = sh(script: 'git log -1 --pretty=%B', returnStdout: true).trim()
                    if (commitMessage.toLowerCase().contains('skip ci')) {
                        env.SKIP_CI = true
                        echo 'Skipping CI due to "skip-ci" in commit message.'
                        currentBuild.result = 'SUCCESS'
                        return
                    }
                }
            }
        }
        stage('Release') {
             when {
                expression { return !env.SKIP_CI.toBoolean() }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-ssh-key', usernameVariable: 'GH_USERNAME', passwordVariable: 'GH_TOKEN')]) {
                    sh 'npm install @semantic-release/commit-analyzer'
                    sh 'npm install @semantic-release/release-notes-generator'
                    sh 'npm install @semantic-release/changelog'
                    sh 'npm install @semantic-release/npm'
                    sh 'npm install @semantic-release/git'
                    sh 'npm install @semantic-release/github@10.1.1'
                    sh 'npm install @semantic-release/exec'
                    sh 'npm install semantic-release-helm'
                    sh "node --version"
                    sh 'npx semantic-release'     
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}